name: Run Alembic
on: [workflow_dispatch]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8"]
        
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0'
        with:
          workload_identity_provider: 'projects/959426188245/locations/global/workloadIdentityPools/github-action-pool-1/providers/github-action-provider-1'
          service_account: 'artifact-repository-access@roomr-222721.iam.gserviceaccount.com'
      
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v0'
      
      - name: Configure Docker
        run: gcloud auth configure-docker --quiet

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install alembic dependencies
        run: |
          python -m pip install --upgrade pip
          pip install alembic
          pip install aiomysql
          pip install cryptography
          pip install passlib
     
      - name: Checkout Lease Service
        uses: actions/checkout@v3
        with:
          repository: sneyd321/lease-service-v2
          path: lease-service

      - name: Checkout Maintenance Ticket Service
        uses: actions/checkout@v3
        with:
          repository: sneyd321/maintenance-ticket-service
          path: maintenance-ticket-service

      - name: Checkout House Service
        uses: actions/checkout@v3
        with:
          repository: sneyd321/house-service-v2
          path: house-service
      
      - name: Checkout Tenant Service
        uses: actions/checkout@v3
        with:
          repository: sneyd321/tenant-service-v2
          path: tenant-service

      - name: Checkout Lanldord Service
        uses: actions/checkout@v3
        with:
          repository: sneyd321/landlord-service-v2
          path: landlord-service

      - name: Start VM
        run: |
          gcloud compute instances start mysql-instance-1 --zone=us-east5-a
          gcloud compute instances add-access-config mysql-instance-1 --access-config-name="external-nat" --zone=us-east5-a
      
      - name: Drop Alembic
        uses: shogo82148/actions-setup-mysql@v1
        with:
          mysql-version: '8.0'
      - run: |
          PUBLIC_IP=$(gcloud compute instances describe mysql-instance-1 --zone=us-east5-a --format='get(networkInterfaces[0].accessConfigs[0].natIP)')
          echo $PUBLIC_IP 
          mysql -utest -phomeowner -h$PUBLIC_IP -e 'DROP TABLE IF EXISTS roomr.alembic_version;'

      - name: Run Lease Alembic
        working-directory: "lease-service"
        run: |
          PUBLIC_IP=$(gcloud compute instances describe mysql-instance-1 --zone=us-east5-a --format='get(networkInterfaces[0].accessConfigs[0].natIP)')
          echo $PUBLIC_IP
          python alembic_setup.py --user=test --password=homeowner --database=roomr --host=$PUBLIC_IP
          alembic revision --autogenerate
          alembic upgrade head

      - run: |
          PUBLIC_IP=$(gcloud compute instances describe mysql-instance-1 --zone=us-east5-a --format='get(networkInterfaces[0].accessConfigs[0].natIP)')
          echo $PUBLIC_IP 
          mysql -utest -phomeowner -h$PUBLIC_IP -e 'DROP TABLE IF EXISTS roomr.alembic_version;'
      
      - name: Run Maintenance Ticket Alembic
        working-directory: "maintenance-ticket-service"
        run: |
          PUBLIC_IP=$(gcloud compute instances describe mysql-instance-1 --zone=us-east5-a --format='get(networkInterfaces[0].accessConfigs[0].natIP)')
          echo $PUBLIC_IP
          python alembic_setup.py --user=test --password=homeowner --database=roomr --host=$PUBLIC_IP
          alembic revision --autogenerate
          alembic upgrade head

      - run: |
          PUBLIC_IP=$(gcloud compute instances describe mysql-instance-1 --zone=us-east5-a --format='get(networkInterfaces[0].accessConfigs[0].natIP)')
          echo $PUBLIC_IP 
          mysql -utest -phomeowner -h$PUBLIC_IP -e 'DROP TABLE IF EXISTS roomr.alembic_version;'
      
      - name: Run House Alembic
        working-directory: "house-service"
        run: |
          PUBLIC_IP=$(gcloud compute instances describe mysql-instance-1 --zone=us-east5-a --format='get(networkInterfaces[0].accessConfigs[0].natIP)')
          echo $PUBLIC_IP
          python alembic_setup.py --user=test --password=homeowner --database=roomr --host=$PUBLIC_IP
          alembic revision --autogenerate
          alembic upgrade head

      - run: |
          PUBLIC_IP=$(gcloud compute instances describe mysql-instance-1 --zone=us-east5-a --format='get(networkInterfaces[0].accessConfigs[0].natIP)')
          echo $PUBLIC_IP 
          mysql -utest -phomeowner -h$PUBLIC_IP -e 'DROP TABLE IF EXISTS roomr.alembic_version;'
      
      - name: Run Tenant Alembic
        working-directory: "tenant-service"
        run: |
          PUBLIC_IP=$(gcloud compute instances describe mysql-instance-1 --zone=us-east5-a --format='get(networkInterfaces[0].accessConfigs[0].natIP)')
          echo $PUBLIC_IP
          python alembic_setup.py --user=test --password=homeowner --database=roomr --host=$PUBLIC_IP
          alembic revision --autogenerate
          alembic upgrade head

      - run: |
          PUBLIC_IP=$(gcloud compute instances describe mysql-instance-1 --zone=us-east5-a --format='get(networkInterfaces[0].accessConfigs[0].natIP)')
          echo $PUBLIC_IP 
          mysql -utest -phomeowner -h$PUBLIC_IP -e 'DROP TABLE IF EXISTS roomr.alembic_version;'
      
      - name: Run Landlord Alembic
        working-directory: "landlord-service"
        run: |
          PUBLIC_IP=$(gcloud compute instances describe mysql-instance-1 --zone=us-east5-a --format='get(networkInterfaces[0].accessConfigs[0].natIP)')
          echo $PUBLIC_IP
          python alembic_setup.py --user=test --password=homeowner --database=roomr --host=$PUBLIC_IP
          alembic revision --autogenerate
          alembic upgrade head

      - run: |
          PUBLIC_IP=$(gcloud compute instances describe mysql-instance-1 --zone=us-east5-a --format='get(networkInterfaces[0].accessConfigs[0].natIP)')
          echo $PUBLIC_IP 
          mysql -utest -phomeowner -h$PUBLIC_IP -e 'DROP TABLE IF EXISTS roomr.alembic_version;'
      
     

      - name: Delete Public IP
        if: always()
        run: |
          gcloud compute instances delete-access-config mysql-instance-1 --access-config-name="external-nat" --zone=us-east5-a

      
     
